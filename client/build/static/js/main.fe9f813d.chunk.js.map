{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Dashboard.js","components/Landing.js","components/App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["FETCH_USER","fetchUser","dispatch","a","axios","get","response","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","style","margin","credits","to","renderContent","Dashboard","Landing","textAlign","SurveyNew","App","path","exact","component","authReducer","state","action","combineReducers","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"gWAAaA,EAAa,aCIbC,EAAY,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACPC,IAAMC,IAAI,qBADH,OACxBC,EADwB,OAE9BJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAASG,OAFjB,2CAAN,uDAMZC,EAAc,SAACC,GAAD,8CAAW,WAAOT,GAAP,eAAAC,EAAA,sEACdC,IAAMQ,KAAK,cAAeD,GADZ,OAC/BL,EAD+B,OAErCJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAASG,OAFV,2CAAX,uD,wBCLrBI,E,4JACL,WAAU,IAAD,OACR,OAEC,aADA,CACC,IAAD,CACCC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRL,MAAO,SAACA,GAAD,OAAW,EAAKM,MAAMP,YAAYC,IACzCO,UAAWC,8GALZ,SAMC,wBAAQC,UAAU,MAAlB,+B,GAVmBC,aAgBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GChBhCW,E,mKAEL,WACC,OAAQC,KAAKR,MAAMS,MAClB,KAAK,KACJ,OACD,KAAK,EACJ,OACC,6BACC,mBAAGC,KAAK,eAAR,iCAGH,QACC,MAAO,CACN,6BACC,cAAC,EAAD,KADO,KAGR,qBAAYC,MAAO,CAAEC,OAAQ,UAA7B,sBACWJ,KAAKR,MAAMS,KAAKI,UADnB,KAGR,6BACC,mBAAGH,KAAK,cAAR,qBADO,S,oBAOZ,WACC,OACC,8BACC,sBAAKP,UAAU,cAAf,UACC,cAAC,IAAD,CACCW,GAAIN,KAAKR,MAAMS,KAAO,WAAa,IACnCN,UAAU,kBAFX,oBAKA,oBAAIA,UAAU,QAAd,SAAuBK,KAAKO,2B,GApCZX,aAgDNC,mBAJf,YACC,MAAO,CAAEI,KADyB,EAARA,QAIZJ,CAAyBE,GC/CzBS,EAJG,WACjB,OAAO,4CCQOC,EATC,WACf,OACC,sBAAKN,MAAO,CAAEO,UAAW,UAAzB,UACC,yCADD,uCCKIC,EAAY,kBAAM,4CAElBC,E,uKACL,WACCZ,KAAKR,MAAMhB,c,oBAGZ,WACC,OACC,qBAAKmB,UAAU,YAAf,SACC,cAAC,IAAD,UACC,gCACC,cAAC,EAAD,IAEA,cAAC,IAAD,CAAOkB,KAAK,IAAIC,OAAK,EAACC,UAAWN,IAEjC,cAAC,IAAD,CAAOI,KAAK,WAAWC,OAAK,EAACC,UAAWP,IAExC,cAAC,IAAD,CAAOK,KAAK,eAAeC,OAAK,EAACC,UAAWJ,e,GAhBhCf,aAwBHC,cAAQ,KAAMC,EAAdD,CAAuBe,GCxBvBI,EATK,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCAC7C,OAAQA,EAAOpC,MACd,KAAKP,EACJ,OAAO2C,EAAOnC,UAAW,EAC1B,QACC,OAAOkC,ICJKE,cAAgB,CAC9BlB,KAAMe,ICMDI,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OACR,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACC,cAAC,EAAD,MAEDO,SAASC,cAAc,Y","file":"static/js/main.fe9f813d.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\r\n","import axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\n\r\n// getting the User details\r\nexport const fetchUser = () => async (dispatch) => {\r\n\tconst response = await axios.get('/api/current_user');\r\n\tdispatch({ type: FETCH_USER, payload: response.data });\r\n};\r\n\r\n// Handling token on payment\r\nexport const handleToken = (token) => async (dispatch) => {\r\n\tconst response = await axios.post('/api/stripe', token);\r\n\tdispatch({ type: FETCH_USER, payload: response.data });\r\n};\r\n","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nclass Payments extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// handling payment with stripe\r\n\t\t\t<StripeCheckout\r\n\t\t\t\tname=\"Emaily\"\r\n\t\t\t\tdescription=\"$5 for 5 email credits\"\r\n\t\t\t\tamount={500}\r\n\t\t\t\ttoken={(token) => this.props.handleToken(token)}\r\n\t\t\t\tstripeKey={process.env.REACT_APP_STRIPE_KEY}>\r\n\t\t\t\t<button className=\"btn\">Add credits</button>\r\n\t\t\t</StripeCheckout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(null, actions)(Payments);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Payments from './Payments';\r\n\r\nclass Header extends Component {\r\n\t// Rendering Content based on User login Status\r\n\trenderContent() {\r\n\t\tswitch (this.props.auth) {\r\n\t\t\tcase null:\r\n\t\t\t\treturn;\r\n\t\t\tcase false:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<a href=\"/auth/google\">Login With Google</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\tdefault:\r\n\t\t\t\treturn [\r\n\t\t\t\t\t<li key=\"1\">\r\n\t\t\t\t\t\t<Payments />\r\n\t\t\t\t\t</li>,\r\n\t\t\t\t\t<li key=\"2\" style={{ margin: '0 10px' }}>\r\n\t\t\t\t\t\tCredits: {this.props.auth.credits}\r\n\t\t\t\t\t</li>,\r\n\t\t\t\t\t<li key=\"3\">\r\n\t\t\t\t\t\t<a href=\"/api/logout\">Logout</a>\r\n\t\t\t\t\t</li>,\r\n\t\t\t\t];\r\n\t\t}\r\n\t}\r\n\t// the final header content\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<nav>\r\n\t\t\t\t<div className=\"nav-wrapper\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={this.props.auth ? '/surveys' : '/'}\r\n\t\t\t\t\t\tclassName=\"left brand-logo\">\r\n\t\t\t\t\t\tEmaily\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<ul className=\"right\">{this.renderContent()}</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n// transferring or mapping state to props\r\nfunction mapStateToProps({ auth }) {\r\n\treturn { auth };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n\treturn <h2>Dashboard</h2>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nconst Landing = () => {\r\n\treturn (\r\n\t\t<div style={{ textAlign: 'center' }}>\r\n\t\t\t<h1>Emaily!</h1>\r\n\t\t\tCollect Feedback from your Users\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions';\r\n\r\nimport Header from './Header';\r\nimport Dashboard from './Dashboard';\r\nimport Landing from './Landing';\r\n\r\nconst SurveyNew = () => <h2>SurveyNew</h2>;\r\n\r\nclass App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchUser();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t{/* home page for users that ARE NOT logged in */}\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Landing} />\r\n\t\t\t\t\t\t{/* home page for users that ARE logged in */}\r\n\t\t\t\t\t\t<Route path=\"/surveys\" exact component={Dashboard} />\r\n\t\t\t\t\t\t{/* creating a new survey */}\r\n\t\t\t\t\t\t<Route path=\"/surveys/new\" exact component={SurveyNew} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(null, actions)(App);\r\n","import { FETCH_USER } from '../actions/types';\r\n\r\nconst authReducer = (state = null, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_USER:\r\n\t\t\treturn action.payload || false;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n\tauth: authReducer,\r\n});\r\n","import 'materialize-css/dist/css/materialize.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}